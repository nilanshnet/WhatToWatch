{"remainingRequest":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/src/views/AccountPage.vue?vue&type=style&index=1&id=707a0c12&lang=scss&scoped=true&","dependencies":[{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/src/views/AccountPage.vue","mtime":1620337451795},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBtaW4td2lkdGg6IDA7CiAgd29yZC13cmFwOiBicmVhay13b3JkOwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDsKICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTsKICBib3JkZXItcmFkaXVzOiAwLjI1cmVtOwp9Cg=="},{"version":3,"sources":["AccountPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <aside class=\"col-sm-5\" style=\"margin: auto\">\n        <div class=\"card\">\n          <article class=\"card-body\">\n            <h4 class=\"card-title text-center mb-4 mt-1\">Preference</h4>\n\n            <div v-if=\"!isEditing\" style=\"display: flex\">\n              <div style=\"margin-right:10px\">Genre(s):</div>\n\n              <p style=\"margin-right:5px\" v-for=\"item in selected\" :key=\"item\">\n                {{ item }};\n              </p>\n            </div>\n            <div v-if=\"isEditing\" style=\"display: flex\">\n              <div style=\"margin-right:10px\">Genre(s):</div>\n              <multiselect\n                id=\"sel\"\n                v-model=\"selected\"\n                :multiple=\"true\"\n                :options=\"options\"\n              >\n              </multiselect>\n            </div>\n            <b-card-footer>\n              <button\n                class=\"btn btn-primary\"\n                @click=\"isEditing = !isEditing\"\n                v-if=\"!isEditing\"\n              >\n                Edit\n              </button>\n              <button\n                class=\"btn btn-primary\"\n                @click=\"save\"\n                v-else-if=\"isEditing\"\n              >\n                Save\n              </button>\n\n              <button\n                class=\"btn btn-primary\"\n                style=\"margin-left: 10px\"\n                v-if=\"isEditing\"\n                @click=\"isEditing = false\"\n              >\n                Cancel\n              </button>\n            </b-card-footer>\n          </article>\n        </div>\n      </aside>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from \"vue-multiselect\";\nimport axios from \"axios\";\nimport { Auth } from \"aws-amplify\";\nimport { mapGetters } from \"vuex\";\nvar config = require(\"../config.js\");\n\n\nexport default {\n  \n  components: { Multiselect },\n  data() {\n    return {\n      payload:{},\n      isEditing: false,\n      selected: null,\n      options: [\"Action\", \"Comedy\", \"Thriller\", \"Horror\", \"Drama\"],\n    };\n  },\n  mounted(){\n      this.load(); \n    },\n  methods: {\n    save() {\n      console.log(this.$store.state.auth.user);\n      this.payload = {\n          'genre': this.selected,\n          'userid': this.$store.state.auth.user.username,\n        };\n      this.isEditing = !this.isEditing;\n       axios({\n        method: \"POST\",\n        url: config.api.invokeUrl + \"/account/update\",\n        headers: {\n          'Authorization': this.$store.state.auth.token,\n          'Content-Type': 'application/json'\n        },\n        data: this.payload}) \n       .then((response) => {\n          // handle success\n          console.log(response['data']);\n        })\n        .catch(function (error) {\n          // handle error\n          console.error(\"Error: \", error);\n        });\n    },\n    async load() {\n      await (Auth.currentSession()).then(data =>\n      axios({\n        method: \"GET\",\n        url: config.api.invokeUrl + \"/account\",\n        headers: {\n          Authorization: data.idToken.jwtToken,\n        },\n        params: {\n          userid: this.$store.state.auth.user.username\n        } ,\n      })\n        .then((response) => {\n          // handle success\n          this.selected = response['data'];\n          console.log(this.selected);\n        })\n        .catch(function (error) {\n          // handle error\n          console.error(\"Error: \", error);\n        }),\n      );\n    },\n },\n  computed: {\n    ...mapGetters({\n      user: \"auth/user\",\n    }),\n  },\n};\n</script>\n\n     \n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\">\n</style>\n<style lang=\"scss\" scoped>\n.card {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  word-wrap: break-word;\n  background-color: black;\n  background-clip: border-box;\n  border: 1px solid white;\n  border-radius: 0.25rem;\n}\n</style>"]}]}