{"remainingRequest":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/src/views/FriendPage.vue?vue&type=style&index=0&id=76a6a587&lang=scss&scoped=true&","dependencies":[{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/src/views/FriendPage.vue","mtime":1621044849753},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nilanshnetan/Desktop/NYU-Spring21/Cloud/FinalProject/final-project-cloud-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIC5tb3ZpZXNTb2NpYWx7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGxlZnQ6IDEwcHg7CiAgcmlnaHQ6IDEwcHg7CiAgdG9wOiAxMDAlOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIHdpZHRoOiA3MCU7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKIAp9IAo="},{"version":3,"sources":["FriendPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"FriendPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"moviesSocial\" style=\"background-color:black\">\n    <!-- <h1>Friends List</h1> -->\n\n   <!--  <div class=\"right-container\" style=\"padding-left:35%;padding-right:35%;\"> \n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\" style=\"padding-top: 50px;padding-bottom:20px;justify-content: center;align-items: center; padding-left:20\">\n\n      <b-form-group id=\"input-group-1\" label-for=\"input-1\">\n        <b-form-input\n          id=\"input-1\"\n          v-model=\"form.email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          required\n        ></b-form-input>\n      </b-form-group>\n      <b-button type=\"submit\" variant=\"success\" class=\"AddFriend\">Add Friend</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Remove Friend</b-button>\n    </b-form>\n    </div>\n -->\n\n    <!-- <b-card no-body class=\"overflow-hidden\" style=\"max-width: 100%;\">\n     --><b-row no-gutters> \n      <b-col md=\"6\" style=\"padding-left:10%\">\n          <h1>Friends List</h1><br>\n          <div class=\"row\" style=\"justify-content: center\">\n             <div v-for=\"(item, index) in friendsList\" :key=\"index\">\n              <b-card bg-variant=\"dark\" text-variant=\"white\" class=\"text-center\" style=\"padding:50px\">\n                <div id=\"resultt\" class=\"success\">\n                <b-card-text>    \n                    List <br>\n                    abcchgcghcgncvjhgvjhvhjvhmvjv<br> \n                    ngbvgjv\n                    List <br>\n                    abcchgcghcgncvjhgvjhvhjvhmvjv<br> \n                    List <br>\n                    abcchgcghcgncvjhgvjhvhjvhmvjv<br> \n                    List <br>\n                    abcchgcghcgncvjhgvjhvhjvhmvjv<br> \n                    \n              </b-card-text>\n            \n              </div>  \n            </b-card>\n             </div>\n           </div>\n\n      <!--   <b-card-img src=\"https://picsum.photos/400/400/?image=20\" alt=\"Image\" class=\"rounded-0\"></b-card-img> -->\n      </b-col>\n      <b-col md=\"5\">\n          <div style=\"position:relative;left: 10%;\">\n          <h1>Add Friends</h1><br>\n          </div>  \n          <div class=\"right-container\">\n            <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\" style=\"padding-top: 10px;padding-bottom:20px;justify-content:center;align-items:center; padding-left:20%\">\n            <b-form-group id=\"input-group-1\" label-for=\"input-1\">\n                <b-form-input\n                id=\"input-1\"\n                v-model=\"form.email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                required\n                ></b-form-input>\n            </b-form-group>\n            <b-button type=\"submit\" variant=\"success\" class=\"AddFriend\" style=\"margin:10px\">Add Friend</b-button>\n            <b-button type=\"reset\" variant=\"danger\" class=\"RemoveFriend\" style=\"margin:10px\">Cancel</b-button>\n            </b-form>\n          </div>\n<!--         <b-card-body title=\"Horizontal Card\">\n          <b-card-text>\n            This is a wider card with supporting text as a natural lead-in to additional content.\n            This content is a little bit longer.\n          </b-card-text>\n        </b-card-body> -->\n      </b-col>\n   </b-row>\n <!--  </b-card> -->\n    <!-- <div class=\"container\">\n       <div class=\"search\">\n          <b-form-input\n                style=\"width: 29%\"\n                v-model=\"param\"\n                type=\"text\"\n                placeholder=\"Enter your friend id\"\n          ></b-form-input>\n          <div class=\"form-group\">\n                <button\n                  class=\"btn btn-success\"\n                  style=\"margin-left: 15px\"\n                  @click=\"addFriend\"\n                >\n                  Add\n                </button>\n                <button\n                     class=\"btn btn-danger\"\n                     style=\"margin-left: 15px\"\n                     @click=\"removeFriend\"\n                    >\n                 Remove\n                </button>\n            </div>\n         </div>\n        </div> -->\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { Auth } from \"aws-amplify\";\nimport { mapGetters } from \"vuex\";\nvar config = require(\"../config.js\");\nexport default {\n  name: \"friend\",\n\n   computed: {\n        ...mapGetters({\n          user: \"auth/user\",\n        }),\n      },\n      data() {\n    // results : []\n       return {\n        result: [],\n        friendsList: [],\n        form: {  \n          email: ''\n        },\n        show: true,\n      }; \n    },\n  methods: {\n\n      async loadSocial(caller) {\n        this.showLoading = true;\n        await Auth.currentSession().then((data) =>\n          //function ()\n           //{\n          axios({\n              method: \"GET\",\n              url: config.api.invokeUrl + \"/friend\",\n              headers: {\n                Authorization: data.idToken.jwtToken,\n              },\n               params: {\n                userid: this.$store.state.auth.user.username,\n              }, \n            })\n              .then((response) => {\n                console.log(response)\n                console.log(response[\"data\"])\n                // handle success\n                this.friendsList = response[\"data\"][\"friend_list\"];\n                console.log(response[\"data\"])\n                this.size = this.friendsList.length;\n                if (caller == \"api\") {\n                  console.log(\"here\");\n                  location.reload()\n                }\n              })\n              .catch(function (error) {\n                // handle error\n                console.error(\"Error: \", error);\n              })\n          );\n        },\n        \n      onSubmit(event, ){\n         event.preventDefault()\n         alert(JSON.stringify(this.form));\n        axios({\n        method: \"POST\",\n        url: config.api.invokeUrl + \"/friend/add\",\n        headers: {\n          Authorization: this.$store.state.auth.token,\n        },\n        data: {\n          userid: this.$store.state.auth.user.username,\n          name: this.$store.state.auth.user.attributes.name,\n          friendid: friendid,\n        },\n      })\n        .then((response) => {\n          // handle success\n          console.log(response[\"data\"]);\n          this.loadHome(\"api\");\n        })\n        .catch(function (error) {\n          // handle error\n          console.error(\"Error: \", error);\n        });\n      },\n      onReset(event){\n        event.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n      }, \n    },\n    /* \n    data() {\n    // results : []\n       return {\n        result: [],\n        form: {  \n          email: ''\n        },\n        show: true\n      }; \n    },\n    computed: {\n        ...mapGetters({\n          user: \"auth/user\",\n        }),\n      },\n    methods: {\n    onSubmit(event) {\n        event.preventDefault()\n        alert(JSON.stringify(this.form))\n      },\n    onReset(event) {\n        event.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n      },\n    loadfriend: function () {\n      axios({\n        method: \"GET\",\n        url: config.api.invokeUrl + \"/friend\",\n        headers: {\n          Authorization: this.$store.state.auth.token,\n        },\n        //data: {\n         // userid: this.$store.state.auth.user.username,\n        //},\n        params:{\n          userid: \"naga\",\n        },\n      })\n        .then((response) => {\n          // handle success\n            console.log(response[\"data\"]);\n            this.friendsList = response[\"data\"][\"friend_list\"];\n            this.size = this.friendsList.length;\n            this.showLoading = true;\n        })\n        .catch(function (error) {\n          // handle error\n          console.error(\"Error: \", error);\n        });\n    },\n    },*/\n}; \n</script>\n\n<style lang=\"scss\" scoped>\n .moviesSocial{\n  position: relative;\n  left: 10px;\n  right: 10px;\n  top: 100%;\n  justify-content: center;\n  width: 70%;\n  align-items: center;\n \n} \n</style>"]}]}